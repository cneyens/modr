% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmf6.R
\name{get_isolines}
\alias{get_isolines}
\alias{get_isobands}
\title{Compute isolines and isobands from a MODFLOW 6 array}
\usage{
get_isolines(array, grid, ngr = 100, levels = 20, crs = NA, as_spatial = TRUE)

get_isobands(array, grid, ngr = 100, levels = 20, crs = NA, as_spatial = TRUE)
}
\arguments{
\item{array}{a 1D (DISV) or 2D (DIS) array}

\item{grid}{mf6grid object}

\item{ngr}{integer vector of length 1 or 2 with the desired number of grid points in x and y directions}

\item{levels}{either a numeric vector with the desired contouring levels or a single value with the desired (but not exact) number of evenly spaced levels}

\item{crs}{optional crs information as passed to \code{\link[sf:st_crs]{sf::st_set_crs()}}. Defaults to NA.}

\item{as_spatial}{logical indicating if the return object should be an \code{sf} object.}
}
\value{
When \code{as_spatial = TRUE}, an \code{sf} object containing the isolines as \code{MULTILINESTRING} with column \code{level}.
For isobands, an \code{sf} object containing the \code{POLYGON} geometries of the bands with columns \code{low} and \code{high} corresponding to the lower and upper level bounds.
When \code{as_spatial = FALSE}, a list object containing lists with the x and y coordinates and an id vector for each level. The names of the list elements correspond to the contouring level (isolines) or interval (isobands).
}
\description{
\code{\link[=get_isolines]{get_isolines()}} computes isolines and isobands from a MODFLOW 6 array by first resampling to the desired output grid
}
\details{
The \code{\link[isoband:isobands]{isoband::isolines()}} algorithm is used for computing the isolines; \code{\link[isoband:isobands]{isoband::isobands()}} is used for computing isobands.
When {as_spatial = TRUE}, \code{\link[isoband:iso_to_sfg]{isoband::iso_to_sfg()}} is used to get the geometries. For isolines an \code{sf MULTILINESTRING} object is created; for isobands, a \code{sf POLYGON} object.
Isoline/isoband computation from cross-sections is not yet supported.
}
